import type { LiveQueryDef } from '@livestore/livestore';
import React from 'react';
export type LiveListProps<TItem> = {
    items$: LiveQueryDef<ReadonlyArray<TItem>>;
    renderItem: (item: TItem, opts: {
        index: number;
        isInitialListRender: boolean;
    }) => React.ReactNode;
    /** Needs to be unique across all list items */
    getKey: (item: TItem, index: number) => string | number;
};
/**
 * This component is a helper component for rendering a list of items for a LiveQuery of an array of items.
 * The idea is that instead of letting React handle the rendering of the items array directly,
 * we derive a item LiveQuery for each item which moves the reactivity to the item level when a single item changes.
 *
 * In the future we want to make this component even more efficient by using incremental rendering (https://github.com/livestorejs/livestore/pull/55)
 * e.g. when an item is added/removed/moved to only re-render the affected DOM nodes.
 */
export declare const LiveList: <TItem>({ items$, renderItem, getKey }: LiveListProps<TItem>) => React.ReactNode;
//# sourceMappingURL=LiveList.d.ts.map